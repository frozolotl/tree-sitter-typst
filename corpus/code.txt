================================================================================
Inline code expression
================================================================================
foo #bar baz
--------------------------------------------------------------------------------

(source_file
  (markup
    (text)
    (space)
    (embedded_code_expr
      (code_ident))
    (space)
    (text)))

================================================================================
Inline code expression with newlines
================================================================================
foo
#bar
baz
--------------------------------------------------------------------------------

(source_file
  (markup
    (text)
    (space)
    (embedded_code_expr
      (code_ident))
    (space)
    (text)))

================================================================================
Identifier
================================================================================
#foo
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_ident))))

================================================================================
Empty content block
================================================================================
#[]
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (content_block))))

================================================================================
Content block with content
================================================================================
#[hello world]
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (content_block
        (markup
          (text))))))

================================================================================
Empty code block
================================================================================
#{}
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_block))))

================================================================================
Code block with content
================================================================================
#{
  10
}
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_block
        (space)
        (code_number
          (code_int))
        (space)))))

================================================================================
Empty array
================================================================================
#()
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (array))))

================================================================================
Parenthesized
================================================================================
#(none)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_parenthesized))))

================================================================================
Parenthesized, with spaces
================================================================================
#( none )
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_parenthesized
        (space)
        (space)))))

================================================================================
Array, one element
================================================================================
#(none,)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (array))))

================================================================================
Array, multiple elements
================================================================================
#(none, none, auto)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (array
        (space)
        (space)))))

================================================================================
Array, multiple elements, spacing everywhere, trailing comma
================================================================================
#(
  none ,
  none ,
  auto ,
)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (array
        (space)
        (space)
        (space)
        (space)
        (space)
        (space)
        (space)))))

================================================================================
Array, one spread
================================================================================
#(..foo)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (array
        (spread
          (code_ident))))))

================================================================================
Array, multiple spreads, spacing everywhere
================================================================================
#( .. foo, .. bar )
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (array
        (space)
        (spread
          (space)
          (code_ident))
        (space)
        (spread
          (space)
          (code_ident))
        (space)))))

================================================================================
Empty dictionary
================================================================================
#(:)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (dict))))

================================================================================
Empty dictionary with extra spacing
================================================================================
#( : )
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (dict
        (space)
        (space)))))

================================================================================
Empty dictionary, empty spread
================================================================================
#(: ..)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (dict
        (space)
        (spread)))))

================================================================================
Prefixed dictionary, spread from variable
================================================================================
#(: ..foo)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (dict
        (space)
        (spread
          (code_ident))))))

================================================================================
Prefixed dictionary, multiple spreads
================================================================================
#(: ..foo, ..bar)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (dict
        (space)
        (spread
          (code_ident))
        (space)
        (spread
          (code_ident))))))

================================================================================
Prefixed dictionary, spread with space
================================================================================
#(: .. foo)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (dict
        (space)
        (spread
          (space)
          (code_ident))))))

================================================================================
Prefixed dictionary, with values
================================================================================
#(: foo: none, "baz": none)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (dict
        (space)
        (named_value
          (code_ident)
          (space))
        (space)
        (named_value
          (string)
          (space))))))

================================================================================
Prefixed dictionary, with values, trailing comma
================================================================================
#(:
  foo: none,
  "baz": none,
)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (dict
        (space)
        (named_value
          (code_ident)
          (space))
        (space)
        (named_value
          (string)
          (space))
        (space)))))

================================================================================
Unprefixed dictionary, with values, spaces everywhere
================================================================================
#(
  foo : none ,
  "baz" : none
)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (dict
        (space)
        (named_value
          (code_ident)
          (space)
          (space))
        (space)
        (space)
        (named_value
          (string)
          (space)
          (space))
        (space)))))

================================================================================
Unprefixed dictionary, with values, spaces everywhere, trailing comma
================================================================================
#(
  foo : none ,
  "baz" : none ,
)
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (dict
        (space)
        (named_value
          (code_ident)
          (space)
          (space))
        (space)
        (space)
        (named_value
          (string)
          (space)
          (space))
        (space)
        (space)))))

================================================================================
Integer
================================================================================
#123
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_number
        (code_int)))))

================================================================================
Float
================================================================================
#123.456
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_number
        (code_float)))))

================================================================================
Float, trailing comma
================================================================================
#123.
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_number
        (code_float)))))

================================================================================
Float, leading comma
================================================================================
#.123
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_number
        (code_float)))))

================================================================================
Float, exponent
================================================================================
#5e5
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_number
        (code_float)))))

================================================================================
Float, exponent with plus
================================================================================
#5E+5
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_number
        (code_float)))))

================================================================================
Float, exponent with minus
================================================================================
#5e-5
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_number
        (code_float)))))

================================================================================
Numeric
================================================================================
#3.5em
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (code_number
        (code_float)))))

================================================================================
Label
================================================================================
#<foo>
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (label))))

================================================================================
Raw
================================================================================
#`raw`
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (raw))))

================================================================================
Let binding, just declaration
================================================================================
#let test
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern
          (code_ident))))))

================================================================================
Let binding, with value set
================================================================================
#let test = 5
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern
          (code_ident))
        (space)
        (space)
        expr: (code_number
          (code_int))))))

================================================================================
Let binding, heading on next line
================================================================================
#let test
= 5
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern
          (code_ident))))
    (heading
      (heading_start)
      (space)
      inner: (markup
        (text)))))

================================================================================
Let binding, after text, heading on next line
================================================================================
test
#let test
= 5
--------------------------------------------------------------------------------

(source_file
  (markup
    (text)
    (space)
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern
          (code_ident))))
    (heading
      (heading_start)
      (space)
      inner: (markup
        (text)))))

================================================================================
Let binding, name parenthesized
================================================================================
#let (test) = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern
          (pattern_parenthesized
            (code_ident)))
        (space)
        (space)))))

================================================================================
Let binding, underscore as name
================================================================================
#let _ = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern)
        (space)
        (space)))))

================================================================================
Let binding, empty array destructuring
================================================================================
#let () = ()
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_destructuring)
        (space)
        (space)
        expr: (array)))))

================================================================================
Let binding, non-empty array destructuring
================================================================================
#let (foo, bar) = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_destructuring
          (code_ident)
          (space)
          (code_ident))
        (space)
        (space)))))

================================================================================
Let binding, array destructuring, trailing comma
================================================================================
#let ( foo , ) = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_destructuring
          (space)
          (code_ident)
          (space)
          (space))
        (space)
        (space)))))

================================================================================
Let binding, dictionary destructuring
================================================================================
#let ( foo : bar ) = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_destructuring
          (space)
          (pattern_named
            field: (code_ident)
            (space)
            (space)
            binding: (code_ident))
          (space))
        (space)
        (space)))))

================================================================================
Function definition
================================================================================
#let foo() = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_closure
          name: (code_ident)
          params: (params))
        (space)
        (space)))))

================================================================================
Function definition, space in parentheses
================================================================================
#let foo( ) = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_closure
          name: (code_ident)
          params: (params
            (space)))
        (space)
        (space)))))

================================================================================
Function definition, one argument
================================================================================
#let foo(bar) = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_closure
          name: (code_ident)
          params: (params
            (code_ident)))
        (space)
        (space)))))

================================================================================
Function definition, one argument, spacing everywhere, trailing comma
================================================================================
#let foo( bar , ) = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_closure
          name: (code_ident)
          params: (params
            (space)
            (code_ident)
            (space)
            (space)))
        (space)
        (space)))))

================================================================================
Function definition, multiple arguments
================================================================================
#let foo(bar, baz, quux) = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_closure
          name: (code_ident)
          params: (params
            (code_ident)
            (space)
            (code_ident)
            (space)
            (code_ident)))
        (space)
        (space)))))

================================================================================
Function definition, named arguments
================================================================================
#let foo(bar: (), baz : "") = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_closure
          name: (code_ident)
          params: (params
            (param_named
              name: (code_ident)
              (space)
              value: (array))
            (space)
            (param_named
              name: (code_ident)
              (space)
              (space)
              value: (string))))
        (space)
        (space)))))

================================================================================
Function definition, spread
================================================================================
#let foo(..bar) = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_closure
          name: (code_ident)
          params: (params
            (pattern_spread
              (code_ident))))
        (space)
        (space)))))

================================================================================
Function definition, destructuring
================================================================================
#let foo((bar: baz)) = none
--------------------------------------------------------------------------------

(source_file
  (markup
    (embedded_code_expr
      (let_binding
        (space)
        pattern: (pattern_closure
          name: (code_ident)
          params: (params
            (pattern_destructuring
              (pattern_named
                field: (code_ident)
                (space)
                binding: (code_ident)))))
        (space)
        (space)))))

